<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="egovframework.kaist.admin.local_group_member.service.impl.AdminLocalGroupMemberMapper">
	 
	<select id="getListAll" resultType="hashMap" >
		SELECT /*AdminLocalGroupMemberMapper*/ *
		, (SELECT ADDRESS_LOCAL FROM TBL_MEMBER WHERE MEMBER_ID = TBL_LOCAL_GROUP_MEMBER.MEMBER_ID ) AS ADDRESS_LOCAL 
		FROM TBL_LOCAL_GROUP_MEMBER order by CREATE_TM desc
	</select>
		
	<select id="getList" resultType="hashMap" parameterType="egovframework.kaist.admin.local_group_member.model.AdminLocalGroupMemberVo">
		SELECT * FROM (
		SELECT /*AdminLocalGroupMemberMapper*/ 
			TBL_MEMBER.MEMBER_ID
			,TBL_MEMBER.PASSWORD
			,TBL_MEMBER.NAME
			,TBL_MEMBER.PHONE
			,TBL_MEMBER.EMAIL
			,TBL_MEMBER.LEVEL
			,TBL_MEMBER.JOIN_TM
			,TBL_MEMBER.CREATE_TM
			,TBL_MEMBER.TYPE
			,TBL_MEMBER.TYPE_SUB
			,TBL_MEMBER.NAME_ENG
			,TBL_MEMBER.NAME_HANJA
			,TBL_MEMBER.IMAGE
			,TBL_MEMBER.ADDRESS_LOCAL
			,TBL_MEMBER.SCHOOL_NAME
			,TBL_MEMBER.SCHOOL_TYPE
			,TBL_MEMBER.SCHOOL_YEAR
			,TBL_MEMBER.SCHOOL_GROUP
			,TBL_MEMBER.BIRTH
			,TBL_MEMBER.SEX
			,TBL_MEMBER.SCHOOL_ZIPCODE
			,TBL_MEMBER.SCHOOL_ADDRESS
			,TBL_MEMBER.SCHOOL_ADDRESS_DETAIL
			,TBL_MEMBER.SUPPORT_AREA
			,TBL_MEMBER.ZIPCODE
			,TBL_MEMBER.ADDRESS
			,TBL_MEMBER.ADDRESS_DETAIL
			,TBL_MEMBER.PARENTS_NAME
			,TBL_MEMBER.PARENTS_RELATION
			,TBL_MEMBER.PARENTS_PHONE
			,TBL_MEMBER.PARENTS_PHONE2
			,TBL_MEMBER.INFO_AGREEMENT
			,TBL_MEMBER.DORMANCY_TM
			,TBL_MEMBER.LOGIN_TM
			,TBL_MEMBER.UPDATE_TM
			,TBL_MEMBER.STATUS
			,TBL_MEMBER.SCHOOL_NUMBER
			,TBL_MEMBER.SCHOOL_JIGGEUB
			,TBL_MEMBER.TEL
			,TBL_MEMBER.DORMANCY
			,TBL_LOCAL_GROUP_MEMBER.LOCAL_GROUP_IDX
			,(SELECT LOCATION FROM TBL_LOCAL_GROUP WHERE MEMBER_ID = TBL_LOCAL_GROUP_MEMBER.LOCAL_GROUP_IDX) AS LOCATION
			
			<if test="LOCAL_GROUP_IDX != ''">
				,(SELECT COUNT(*) FROM TBL_MATCHING WHERE PROFESSOR_MEMBER_ID = TBL_MEMBER.MEMBER_ID) AS PROFESSOR_CNT
				,(SELECT COUNT(*) FROM (SELECT (SELECT PROFESSOR_MEMBER_ID FROM TBL_MATCHING WHERE MEMBER_ID = TBL_PORTFOLIO.MEMBER_ID ) AS PROFESSOR_MEMBER_ID FROM TBL_PORTFOLIO  ) AS A WHERE A.PROFESSOR_MEMBER_ID = TBL_MEMBER.MEMBER_ID) AS PORTFOLIO_CNT
			
			
			</if>
			
			
		FROM TBL_LOCAL_GROUP_MEMBER, TBL_MEMBER
		WHERE 1=1 
		
		AND TBL_LOCAL_GROUP_MEMBER.MEMBER_ID = TBL_MEMBER.MEMBER_ID
		) AS A
		WHERE 1=1 
		

		<if test="LOCAL_GROUP_IDX != ''">
	    	AND A.LOCAL_GROUP_IDX = #{LOCAL_GROUP_IDX}
	    </if>		
		
		<if test="LOCATION != ''">
	    	AND A.LOCATION = #{LOCATION}
	    </if>
	    <if test="LEVEL != ''">
	    	AND A.LEVEL = #{LEVEL}
	    </if>
	    
	    <if test="TYPE != ''">
	    	AND A.TYPE = #{TYPE}
	    </if>
	    
	     <if test="SEARCH_TEXT != ''">
		     <if test="SEARCH_TYPE == 'ALL'">
		    	AND (
		    		A.NAME LIKE '%${SEARCH_TEXT}%' 
		    		OR  A.MEMBER_ID LIKE '%${SEARCH_TEXT}%'
		    		OR  A.SCHOOL_NAME LIKE '%${SEARCH_TEXT}%'
		    		OR  A.PHONE LIKE '%${SEARCH_TEXT}%'
		    		) 
		    </if>
		    <if test="SEARCH_TYPE != 'ALL'">
	    		 AND A.${SEARCH_TYPE} LIKE '%${SEARCH_TEXT}%'
	    	</if>
	    	
	    </if>
	    
	    
		order by UPDATE_TM desc
		
		LIMIT ${LIMIT} OFFSET ${OFFSET} 
			
	</select>
		
	<select id="getListCnt" resultType="int" parameterType="egovframework.kaist.admin.local_group_member.model.AdminLocalGroupMemberVo">
		SELECT count(*) FROM (
		SELECT /*AdminLocalGroupMemberMapper*/ 
			TBL_MEMBER.MEMBER_ID
			,TBL_MEMBER.PASSWORD
			,TBL_MEMBER.NAME
			,TBL_MEMBER.PHONE
			,TBL_MEMBER.EMAIL
			,TBL_MEMBER.LEVEL
			,TBL_MEMBER.JOIN_TM
			,TBL_MEMBER.CREATE_TM
			,TBL_MEMBER.TYPE
			,TBL_MEMBER.TYPE_SUB
			,TBL_MEMBER.NAME_ENG
			,TBL_MEMBER.NAME_HANJA
			,TBL_MEMBER.IMAGE
			,TBL_MEMBER.ADDRESS_LOCAL
			,TBL_MEMBER.SCHOOL_NAME
			,TBL_MEMBER.SCHOOL_TYPE
			,TBL_MEMBER.SCHOOL_YEAR
			,TBL_MEMBER.SCHOOL_GROUP
			,TBL_MEMBER.BIRTH
			,TBL_MEMBER.SEX
			,TBL_MEMBER.SCHOOL_ZIPCODE
			,TBL_MEMBER.SCHOOL_ADDRESS
			,TBL_MEMBER.SCHOOL_ADDRESS_DETAIL
			,TBL_MEMBER.SUPPORT_AREA
			,TBL_MEMBER.ZIPCODE
			,TBL_MEMBER.ADDRESS
			,TBL_MEMBER.ADDRESS_DETAIL
			,TBL_MEMBER.PARENTS_NAME
			,TBL_MEMBER.PARENTS_RELATION
			,TBL_MEMBER.PARENTS_PHONE
			,TBL_MEMBER.PARENTS_PHONE2
			,TBL_MEMBER.INFO_AGREEMENT
			,TBL_MEMBER.DORMANCY_TM
			,TBL_MEMBER.LOGIN_TM
			,TBL_MEMBER.UPDATE_TM
			,TBL_MEMBER.STATUS
			,TBL_MEMBER.SCHOOL_NUMBER
			,TBL_MEMBER.SCHOOL_JIGGEUB
			,TBL_MEMBER.TEL
			,TBL_MEMBER.DORMANCY
			,TBL_LOCAL_GROUP_MEMBER.LOCAL_GROUP_IDX
			,(SELECT LOCATION FROM TBL_LOCAL_GROUP WHERE MEMBER_ID = TBL_LOCAL_GROUP_MEMBER.LOCAL_GROUP_IDX) AS LOCATION
		FROM TBL_LOCAL_GROUP_MEMBER, TBL_MEMBER
		WHERE 1=1 
		
		AND TBL_LOCAL_GROUP_MEMBER.MEMBER_ID = TBL_MEMBER.MEMBER_ID
		) AS A
		WHERE 1=1 
		
		<if test="LOCATION != ''">
	    	AND A.LOCATION = #{LOCATION}
	    </if>
	    <if test="LEVEL != ''">
	    	AND A.LEVEL = #{LEVEL}
	    </if>
	    
	    <if test="TYPE != ''">
	    	AND A.TYPE = #{TYPE}
	    </if>
	     <if test="SEARCH_TEXT != ''">
		     <if test="SEARCH_TYPE == 'ALL'">
		    	AND (
		    		A.NAME LIKE '%${SEARCH_TEXT}%' 
		    		OR  A.MEMBER_ID LIKE '%${SEARCH_TEXT}%'
		    		OR  A.SCHOOL_NAME LIKE '%${SEARCH_TEXT}%'
		    		OR  A.PHONE LIKE '%${SEARCH_TEXT}%'
		    		) 
		    </if>
		    <if test="SEARCH_TYPE != 'ALL'">
	    		 AND A.${SEARCH_TYPE} LIKE '%${SEARCH_TEXT}%'
	    	</if>
	    	
	    </if>

	</select>

	<select id="getView" resultType="egovframework.kaist.admin.local_group_member.model.AdminLocalGroupMemberVo" parameterType="String">
		SELECT /*AdminLocalGroupMemberMapper*/ * FROM TBL_LOCAL_GROUP_MEMBER where MEMBER_ID = #{value};
	</select>

	<insert id="setInsert"	parameterType="egovframework.kaist.admin.local_group_member.model.AdminLocalGroupMemberVo">
		INSERT INTO /*AdminLocalGroupMemberMapper*/ TBL_LOCAL_GROUP_MEMBER (
		  	 
			MEMBER_ID, 
			LOCAL_GROUP_IDX, 
			CREATE_TM,
			UPDATE_TM
		) VALUES (
			#{MEMBER_ID}, 
			#{LOCAL_GROUP_IDX},
			now(),
			now() 

		) 
	</insert>

	<update id="setUpdate"	parameterType="egovframework.kaist.admin.local_group_member.model.AdminLocalGroupMemberVo">
		UPDATE /*AdminLocalGroupMemberMapper*/ TBL_LOCALGROUPMEMBER SET 
			LOCAL_GROUP_IDX= {LOCAL_GROUP_IDX}, 
			UPDATE_TM = now()
		WHERE
			MEMBER_ID = #{MEMBER_ID} 
	</update>
	
	
	<delete id="setDelete"	parameterType="egovframework.kaist.admin.local_group_member.model.AdminLocalGroupMemberVo">
		DELETE FROM /*AdminLocalGroupMemberMapper*/
			TBL_LOCAL_GROUP_MEMBER
		WHERE MEMBER_ID =  #{MEMBER_ID} 
	</delete>
	<delete id="setDeleteGroupIdx"	parameterType="egovframework.kaist.admin.local_group.model.AdminLocalGroupVo">
		DELETE FROM /*AdminLocalGroupMemberMapper*/
			TBL_LOCAL_GROUP_MEMBER
		WHERE LOCAL_GROUP_IDX =  #{MEMBER_ID} 
	</delete>
    
</mapper>