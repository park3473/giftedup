<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.kaist.user.exam.service.impl.UserExamMapper">
	<select id="getAllList" resultType="hashMap"  parameterType="egovframework.kaist.user.exam.model.UserExamVo">
		SELECT * FROM TBL_EXAM
		WHERE 1=1
		AND TYPE = "1"
		<if test="SEARCH_TEXT != ''">
		    <if test="SEARCH_TYPE != 'ALL'">
	    		 AND ${SEARCH_TYPE} LIKE '%${SEARCH_TEXT}%'
	    	</if>
	    </if>
	    LIMIT ${LIMIT} OFFSET ${OFFSET}
	</select>
	
	<select id="getAllListCnt" resultType="int" parameterType="egovframework.kaist.user.exam.model.UserExamVo">
		SELECT COUNT(*) FROM TBL_EXAM
		WHERE 1=1
		<if test="SEARCH_TEXT != ''">
		    <if test="SEARCH_TYPE != 'ALL'">
	    		 AND ${SEARCH_TYPE} LIKE '%${SEARCH_TEXT}%'
	    	</if>
	    </if> 
	</select>
	
	<select id="getExamView" parameterType="egovframework.kaist.user.exam.model.UserExamVo" resultType="egovframework.kaist.user.exam.model.UserExamVo">
		SELECT * FROM TBL_EXAM
		WHERE IDX = #{idx}
	</select>
	
	<select id="getExamCategoryList" parameterType="egovframework.kaist.user.exam.model.UserExamVo" resultType="hashMap">
		<if test="l_category != ''">
			SELECT L_CATEGORY FROM TBL_EXAM
			ORDER BY L_CATEGORY
		</if>
		<if test="m_category != ''">
			SELECT M_CATEGORY FROM TBL_EXAM
			ORDER BY M_CATEGORY
		</if>
	</select>
	
	<!-- question_list 부분 -->
	<select id="getQuestionList" parameterType="egovframework.kaist.user.exam.model.UserExamVo" resultType="hashMap">
		SELECT 
		    q.*,
		    COALESCE(GROUP_CONCAT(s.content ORDER BY s.seq SEPARATOR '#'), '') AS Choices
		FROM 
		    TBL_QUESTION_LIST ql
		JOIN 
		    TBL_QUESTION q ON ql.question_idx = q.idx
		LEFT JOIN 
		    TBL_SELECT s ON q.idx = s.question_idx
		WHERE 
		    ql.exam_idx = #{idx}
		GROUP BY 
		    q.idx
		ORDER BY 
		    ql.seq;
	</select>
	
	<update id="setExamRespondents" parameterType="egovframework.kaist.user.exam.model.UserExamResultVo">
		UPDATE TBL_EXAM_RESPONDENTS SET RESPONDENTS = 'yes' WHERE EXAM_IDX = #{exam_idx} AND MEMBER_ID = #{member_id}
	</update>
	
	<insert id="setExamResultData" parameterType="egovframework.kaist.user.exam.model.UserExamResultVo">
		INSERT INTO TBL_EXAM_RESULT (EXAM_IDX , MEMBER_ID , NAME , SELECT_LIST , COMPLETE , COMPLETE_TM , CREATE_TM , UPDATE_TM)
		VALUES(#{exam_idx} , #{member_id} , #{name} , #{select_list} , #{complete} , now() , now() , now())
	</insert>
	
	<select id="getResultAllList" resultType="hashMap"  parameterType="egovframework.kaist.user.exam.model.UserExamResultVo">
		SELECT R.* , E.name AS TITLE  FROM TBL_EXAM_RESULT R JOIN TBL_EXAM E ON R.exam_idx = E.idx 
		WHERE 1=1
		AND R.member_id = #{member_id}
		<if test="SEARCH_TEXT != ''">
		    <if test="SEARCH_TYPE != 'ALL'">
	    		 AND ${SEARCH_TYPE} LIKE '%${SEARCH_TEXT}%'
	    	</if>
	    </if>
	    LIMIT ${LIMIT} OFFSET ${OFFSET}
	</select>
	
	<select id="getResultAllListCnt" resultType="int" parameterType="egovframework.kaist.user.exam.model.UserExamResultVo">
		SELECT COUNT(*) FROM TBL_EXAM_RESULT R JOIN TBL_EXAM E ON R.exam_idx = E.idx 
		WHERE 1=1
		AND R.member_id = #{member_id}
		<if test="SEARCH_TEXT != ''">
		    <if test="SEARCH_TYPE != 'ALL'">
	    		 AND ${SEARCH_TYPE} LIKE '%${SEARCH_TEXT}%'
	    	</if>
	    </if> 
	</select>
	
	<select id="getResultListView" parameterType="egovframework.kaist.user.exam.model.UserExamResultVo" resultType="hashMap">
		SELECT R.* , E.point , E.l_category , E.m_category , E.name , E.category  FROM TBL_EXAM_RESULT R JOIN TBL_EXAM E ON R.exam_idx = E.idx WHERE R.member_id = #{member_id}
	</select>
	
	<select id="getExamResultView"  parameterType="egovframework.kaist.user.exam.model.UserExamResultVo" resultType="egovframework.kaist.user.exam.model.UserExamResultVo" >
		SELECT * FROM TBL_EXAM_RESULT WHERE member_id = #{member_id} and idx = #{idx}
	</select>

	<select id="getExamResultMemberAll"  parameterType="egovframework.kaist.user.exam.model.UserExamResultVo" resultType="hashMap">
		SELECT 
	    er.* , m.address_local
		FROM 
		    TBL_EXAM_RESULT er
		JOIN 
		    TBL_EXAM e ON er.exam_idx = e.idx
		JOIN 
		    TBL_MEMBER m ON er.member_id = m.member_id
		WHERE 
		    e.idx = #{exam_idx}
	</select>


</mapper>