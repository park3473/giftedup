<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="egovframework.kaist.user.mentoring.service.impl.UserMentoringMapper">
	 
	<select id="getListAll" resultType="hashMap" >
		SELECT /*UserMentoringMapper*/ * FROM TBL_MENTORING order by CREATE_TM desc
	</select>

	
	<select id="getList" resultType="hashMap" parameterType="egovframework.kaist.user.mentoring.model.UserMentoringVo">
		SELECT /*UserMentoringMapper*/ 
		*
		 FROM TBL_MENTORING
		WHERE 1=1 
	    
	  	<if test="SEARCH_TEXT != ''">
		     <if test="SEARCH_TYPE == 'ALL'">
		    	AND (
	    		    NAME LIKE '%${SEARCH_TEXT}%'
		    		OR  CONTENT LIKE '%${SEARCH_TEXT}%'
		    		OR  TYPE LIKE '%${SEARCH_TEXT}%'
		    		) 
		    </if>
		    <if test="SEARCH_TYPE != 'ALL'">
	    		 AND ${SEARCH_TYPE} LIKE '%${SEARCH_TEXT}%'
	    	</if>
	    </if>
	    
		ORDER BY UPDATE_TM DESC
		
		LIMIT ${LIMIT} OFFSET ${OFFSET}
	</select>
	
		
	<select id="getListCnt" resultType="int" parameterType="egovframework.kaist.user.mentoring.model.UserMentoringVo">
		SELECT /*UserMentoringMapper*/ count(*) FROM TBL_MENTORING
		WHERE 1=1 
	    
	  	<if test="SEARCH_TEXT != ''">
		    <if test="SEARCH_TYPE == 'ALL'">
		    	AND (
		    		NAME LIKE '%${SEARCH_TEXT}%'
		    		OR  CONTENT LIKE '%${SEARCH_TEXT}%'
		    		OR  TYPE LIKE '%${SEARCH_TEXT}%'
		    		) 
		    </if>
		    <if test="SEARCH_TYPE != 'ALL'">
	    		 AND ${SEARCH_TYPE} LIKE '%${SEARCH_TEXT}%'
	    	</if>
	    </if>
	</select>

	<select id="getView" resultType="egovframework.kaist.user.mentoring.model.UserMentoringVo" parameterType="String">
		SELECT /*UserMentoringMapper*/ * FROM TBL_MENTORING where IDX = #{value};
	</select>

	<insert id="setInsert"	parameterType="egovframework.kaist.user.mentoring.model.UserMentoringVo">
		INSERT INTO /*UserMentoringMapper*/ TBL_MENTORING (
			IDX, 
			NAME, 
			TYPE, 
			TBL_MENTORING.GROUP, 
			ADDRESS, 
			LOCATION, 
			EMAIL, 
			PHONE,
			MEMO,
			IMAGE,
			CONTENT,
			CREATE_TM,
			MEMBER_ID, 
			UPDATE_TM
	
		) VALUES (
			0, 
			#{NAME}, 
			#{TYPE}, 
			#{GROUP}, 
			#{ADDRESS}, 
			#{LOCATION}, 
			#{EMAIL}, 
			#{PHONE},
			#{MEMO},
			#{IMAGE},
			#{CONTENT},
			now(),
			#{MEMBER_ID}, 
			now()
		) 
	</insert>

	<update id="setUpdate"	parameterType="egovframework.kaist.user.mentoring.model.UserMentoringVo">
		UPDATE /*UserMentoringMapper*/ TBL_MENTORING SET 
			NAME= #{NAME}, 
			TYPE= #{TYPE}, 
			TBL_MENTORING.GROUP= #{GROUP}, 
			ADDRESS= #{ADDRESS}, 
			LOCATION= #{LOCATION}, 
			<if test="IMAGE != ''">
			IMAGE= #{IMAGE},  
			</if>
			EMAIL= #{EMAIL},
			PHONE= #{PHONE},
			MEMO= #{MEMO},
			CONTENT= #{CONTENT}, 
			MEMBER_ID= #{MEMBER_ID}, 
			UPDATE_TM= now()
		WHERE
			IDX = #{IDX} 
	</update>
	
	
	<delete id="setDelete"	parameterType="egovframework.kaist.user.mentoring.model.UserMentoringVo">
		DELETE FROM /*UserMentoringMapper*/
			TBL_MENTORING
		WHERE IDX =  #{IDX} 
	</delete>

    
</mapper>