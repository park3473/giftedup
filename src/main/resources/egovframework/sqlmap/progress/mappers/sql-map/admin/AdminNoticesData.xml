<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="egovframework.kaist.admin.notices_data.service.impl.AdminNoticesDataMapper">
	 
	<select id="getListAll" resultType="hashMap" >
		SELECT /*AdminNoticesDataMapper*/ * FROM TBL_NOTICES_DATA order by CREATE_TM desc
	</select>

	
	<select id="getList" resultType="hashMap" parameterType="egovframework.kaist.admin.notices_data.model.AdminNoticesDataVo">
		SELECT /*AdminNoticesDataMapper*/ 
		*
		, IFNULL((SELECT NAME FROM TBL_MEMBER WHERE MEMBER_ID = TBL_NOTICES_DATA.MEMBER_ID), "") AS MEMBER_NAME
		 FROM TBL_NOTICES_DATA
		WHERE 1=1 

	   	<if test="NOTICES_IDX != ''">
	    	AND NOTICES_IDX = #{NOTICES_IDX}
	    </if>
	    
	  	<if test="SEARCH_TEXT != ''">
		     <if test="SEARCH_TYPE == 'ALL'">
		    	AND (
	    		    MEMBER_ID LIKE '%${SEARCH_TEXT}%'
		    		OR  CONTENT LIKE '%${SEARCH_TEXT}%'
		    		OR  TITLE LIKE '%${SEARCH_TEXT}%'
		    		) 
		    </if>
		    <if test="SEARCH_TYPE != 'ALL'">
	    		 AND ${SEARCH_TYPE} LIKE '%${SEARCH_TEXT}%'
	    	</if>
	    	
	    </if>
	    
			ORDER BY TYPE DESC, CREATE_TM DESC
		
		LIMIT ${LIMIT} OFFSET ${OFFSET}
	</select>
	
	
		
	<select id="getListCnt" resultType="int" parameterType="egovframework.kaist.admin.notices_data.model.AdminNoticesDataVo">
		SELECT /*AdminNoticesDataMapper*/ count(*) FROM TBL_NOTICES_DATA
		WHERE 1=1 
	   	<if test="NOTICES_IDX != ''">
	    	AND NOTICES_IDX = #{NOTICES_IDX}
	    </if>
	    
	  	<if test="SEARCH_TEXT != ''">
		    <if test="SEARCH_TYPE == 'ALL'">
		    	AND (
		    		MEMBER_ID LIKE '%${SEARCH_TEXT}%'
		    		OR  CONTENT LIKE '%${SEARCH_TEXT}%'
		    		OR  TITLE LIKE '%${SEARCH_TEXT}%'
		    		) 
		    </if>
		    <if test="SEARCH_TYPE != 'ALL'">
	    		 AND ${SEARCH_TYPE} LIKE '%${SEARCH_TEXT}%'
	    	</if>
	    	
	    </if>
	</select>

	<select id="getView" resultType="egovframework.kaist.admin.notices_data.model.AdminNoticesDataVo" parameterType="String">
		SELECT /*AdminNoticesDataMapper*/ * FROM TBL_NOTICES_DATA where IDX = #{value};
	</select>

	<insert id="setInsert"	parameterType="egovframework.kaist.admin.notices_data.model.AdminNoticesDataVo">
		INSERT INTO /*AdminNoticesDataMapper*/ TBL_NOTICES_DATA (
						IDX, 
			NOTICES_IDX, 
			TYPE, 
			TYPE_SUB, 
			TITLE, 
			CONTENT, 
			FILES, 
			LINKS,
			LINKS2,
			LINKS_TYPE,
			LINKS2_TYPE,
			IMAGE,
			
			PHOTO_SHOW, 
			PASSWORD, 
			MEMBER_ID, 
			CREATE_TM, 
			UPDATE_TM, 
			READ_CNT 



	
		) VALUES (
			0, 
			#{NOTICES_IDX}, 
			#{TYPE}, 
			#{TYPE_SUB}, 
			#{TITLE}, 
			#{CONTENT}, 
			#{FILES}, 
			#{LINKS},
			#{LINKS2},
			#{LINKS_TYPE},
			#{LINKS2_TYPE},
			
			#{IMAGE},
			  
			#{PHOTO_SHOW}, 
			#{PASSWORD}, 
			#{MEMBER_ID}, 
			now(), 
			now(), 
			0 




		) 
	</insert>

	<update id="setUpdate"	parameterType="egovframework.kaist.admin.notices_data.model.AdminNoticesDataVo">
		UPDATE /*AdminNoticesDataMapper*/ TBL_NOTICES_DATA SET 
			NOTICES_IDX= #{NOTICES_IDX}, 
			TYPE= #{TYPE}, 
			TYPE_SUB= #{TYPE_SUB}, 
			TITLE= #{TITLE}, 
			CONTENT= #{CONTENT}, 
			<if test="FILES != ''">
			FILES= #{FILES},
			</if>
			<if test="IMAGE != ''">
			IMAGE= #{IMAGE},  
			</if>
			
			LINKS= #{LINKS},
			LINKS2= #{LINKS2},
			LINKS2_TYPE= #{LINKS2_TYPE},
			LINKS_TYPE= #{LINKS_TYPE}, 
			
			
			PHOTO_SHOW= #{PHOTO_SHOW}, 
			PASSWORD= #{PASSWORD}, 
			MEMBER_ID= #{MEMBER_ID}, 
			UPDATE_TM= now()
		WHERE
			IDX = #{IDX} 
	</update>
	
	
	<delete id="setDelete"	parameterType="egovframework.kaist.admin.notices_data.model.AdminNoticesDataVo">
		DELETE FROM /*AdminNoticesDataMapper*/
			TBL_NOTICES_DATA
		WHERE IDX =  #{IDX} 
	</delete>

    
</mapper>